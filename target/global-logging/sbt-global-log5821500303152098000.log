[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jeanp\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jeanp\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.11 (Amazon.com Inc. Java 21.0.4)
[debug] Load.defaultLoad until apply took 197.7924ms
[debug]           Load.loadUnit: plugins took 176.9785ms
[debug]           Load.loadUnit: defsScala took 0.5661ms
[debug] [Loading] Scanning directory C:\Users\jeanp\Documents\programming\University\proyecto-funcional\project
[debug]             Load.loadUnit: mkEval took 10.7748ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jeanp\Documents\programming\University\proyecto-funcional\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 39.5499 ms
[info] loading settings for project proyecto-funcional-build from idea.sbt...
[debug]               Load.resolveProject(proyecto-funcional-build) took 37.8897ms
[debug]             Load.loadTransitive: finalizeProject(Project(id proyecto-funcional-build, base: C:\Users\jeanp\Documents\programming\University\proyecto-funcional\project, plugins: List(<none>))) took 85.8632ms
[debug] [Loading] Done in C:\Users\jeanp\Documents\programming\University\proyecto-funcional\project, returning: (proyecto-funcional-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3941.5789ms
[debug]           Load.loadUnit: cleanEvalClasses took 20.6064ms
[debug]         Load.loadUnit(file:/C:/Users/jeanp/Documents/programming/University/proyecto-funcional/project/, ...) took 4150.7207ms
[debug]       Load.apply: load took 4356.7915ms
[debug]       Load.apply: resolveProjects took 5.2182ms
[debug]       Load.apply: finalTransforms took 69.8214ms
[debug]       Load.apply: config.delegates took 8.0707ms
[debug]       Load.apply: Def.make(settings)... took 520.634ms
[debug]       Load.apply: structureIndex took 151.5095ms
[debug]       Load.apply: mkStreams took 2.6454ms
[info] loading project definition from C:\Users\jeanp\Documents\programming\University\proyecto-funcional\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8906.604ms
[debug]     Load.loadUnit: defsScala took 0.0068ms
[debug] [Loading] Scanning directory C:\Users\jeanp\Documents\programming\University\proyecto-funcional
[debug]       Load.loadUnit: mkEval took 0.5256ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 28.2008 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 60.6566ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\jeanp\Documents\programming\University\proyecto-funcional, plugins: List(<none>))) took 92.0035ms
[debug] [Loading] Done in C:\Users\jeanp\Documents\programming\University\proyecto-funcional, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2686.2817ms
[debug]     Load.loadUnit: cleanEvalClasses took 69.0635ms
[debug]   Load.loadUnit(file:/C:/Users/jeanp/Documents/programming/University/proyecto-funcional/, ...) took 11669.9895ms
[debug] Load.apply: load took 11729.1934ms
[debug] Load.apply: resolveProjects took 0.3217ms
[debug] Load.apply: finalTransforms took 243.3867ms
[debug] Load.apply: config.delegates took 0.7015ms
[debug] Load.apply: Def.make(settings)... took 277.3801ms
[debug] Load.apply: structureIndex took 91.432ms
[debug] Load.apply: mkStreams took 0.0061ms
[info] set current project to proyecto-funcional (in build file:/C:/Users/jeanp/Documents/programming/University/proyecto-funcional/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49745 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49745, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to proyecto-funcional (in build file:/C:/Users/jeanp/Documents/programming/University/proyecto-funcional/)
[debug] > Exec(idea-shell, None, None)
